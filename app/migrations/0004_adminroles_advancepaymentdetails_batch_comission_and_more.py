# Generated by Django 5.1 on 2024-11-12 07:41

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0003_rename_admin_adminhqdiv_admin_id_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminRoles',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('desig_id', models.IntegerField()),
            ],
            options={
                'db_table': 'admin_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdvancePaymentDetails',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField()),
                ('order_id', models.IntegerField()),
                ('amount', models.TextField()),
                ('transcation_id', models.TextField()),
                ('reciept', models.TextField()),
                ('payment_date', models.DateTimeField()),
                ('payment_mode', models.TextField()),
                ('status', models.CharField(db_comment='P -pendingApproval\r\nY - Accepted\r\nD - Rejected', max_length=1)),
            ],
            options={
                'db_table': 'advance_payment_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('batch', models.TextField()),
                ('product_id', models.IntegerField()),
                ('good_reciept_id', models.IntegerField()),
            ],
            options={
                'db_table': 'batch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comission',
            fields=[
                ('comission_id', models.AutoField(primary_key=True, serialize=False)),
                ('vetzone_id', models.IntegerField()),
                ('commission', models.IntegerField()),
                ('tds', models.IntegerField()),
                ('commission_amt', models.IntegerField()),
                ('status', models.CharField(max_length=11)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'comission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ComissionApproveHold',
            fields=[
                ('comission_aphold_id', models.AutoField(primary_key=True, serialize=False)),
                ('vetzone_id', models.IntegerField()),
                ('comission', models.IntegerField()),
                ('tds', models.IntegerField()),
                ('commission_amt', models.IntegerField()),
                ('status', models.CharField(db_comment='P: Proceed to Pay; U: Unpaid; H: Hold', max_length=1)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'comission_approve_hold',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreditNotes',
            fields=[
                ('credit_note_id', models.AutoField(primary_key=True, serialize=False)),
                ('credit_note_no', models.TextField()),
                ('return_id', models.IntegerField()),
                ('cust_type', models.TextField()),
                ('credit_amount', models.FloatField()),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'credit_notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreditNoteTable',
            fields=[
                ('credit_note_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.TextField()),
                ('invoice_date', models.DateTimeField()),
                ('order_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('user_role', models.TextField()),
                ('order_date', models.DateField()),
                ('credit_end_date', models.DateField()),
                ('payment_status', models.CharField(max_length=1)),
                ('payment_date', models.DateField()),
                ('placeorder', models.CharField(max_length=1)),
                ('comment', models.TextField()),
            ],
            options={
                'db_table': 'credit_note_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreditNoteUserDetails',
            fields=[
                ('credit_note_user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('credit_limit', models.TextField()),
                ('credit_days', models.TextField()),
            ],
            options={
                'db_table': 'credit_note_user_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('owner_name', models.TextField(blank=True, null=True)),
                ('mobile_number', models.TextField()),
                ('email', models.TextField()),
                ('password', models.TextField()),
                ('type', models.IntegerField()),
                ('role', models.IntegerField()),
                ('kyc_status', models.CharField(max_length=1)),
                ('approval_status', models.CharField(db_comment='Y -> Approved N -> Declined P->Pending A->Approved by Admin F->Approved by Finance', max_length=1)),
                ('is_block', models.CharField(max_length=1)),
                ('created_on', models.DateTimeField()),
                ('placeorder', models.CharField(max_length=1)),
                ('state_id', models.IntegerField()),
                ('remark', models.TextField(blank=True, null=True)),
                ('terms_conditions', models.CharField(db_comment='N - Accepted on Registration\r\nY- Accepted on Mail', max_length=1)),
                ('supplier', models.IntegerField(blank=True, null=True)),
                ('farmer_type', models.CharField(blank=True, max_length=11, null=True)),
                ('dairy_animals', models.IntegerField(blank=True, null=True)),
                ('sheep_goat', models.IntegerField(blank=True, null=True)),
                ('piggery_animals', models.IntegerField(blank=True, null=True)),
                ('layer_birds', models.IntegerField(blank=True, null=True)),
                ('broiler_birds', models.IntegerField(blank=True, null=True)),
                ('reference', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerHqDiv',
            fields=[
                ('customer_hq_div_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField()),
                ('hq_id', models.IntegerField()),
                ('div_id', models.IntegerField()),
                ('approval_admin_id', models.IntegerField()),
                ('sub_division', models.TextField()),
            ],
            options={
                'db_table': 'customer_hq_div',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerInstock',
            fields=[
                ('instock_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('sku', models.TextField()),
                ('quantity', models.IntegerField()),
                ('batch', models.TextField()),
                ('manfacturing_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('mrp', models.FloatField()),
                ('purchase_rate', models.FloatField()),
                ('pts', models.FloatField()),
                ('ptr', models.FloatField()),
                ('ptc', models.FloatField()),
                ('ptv', models.FloatField()),
                ('ptk', models.FloatField()),
                ('margin', models.FloatField()),
                ('created_by', models.IntegerField()),
                ('created_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'customer_instock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerInvoice',
            fields=[
                ('customer_invoice_id', models.AutoField(primary_key=True, serialize=False)),
                ('invoice_no', models.TextField()),
                ('order_id', models.IntegerField()),
                ('invoice_amount', models.IntegerField()),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'customer_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerKycDocument',
            fields=[
                ('cust_kyc_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField()),
                ('document', models.TextField(blank=True, null=True)),
                ('approval_satatus', models.CharField(max_length=1)),
                ('uploaded_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'customer_kyc_document',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerLrDetails',
            fields=[
                ('lr_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('lrno', models.TextField()),
                ('order_id', models.IntegerField()),
                ('file', models.TextField()),
                ('is_verified', models.CharField(max_length=1)),
                ('dispatch_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'customer_lr_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerMeta',
            fields=[
                ('customer_meta_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField()),
                ('customer_meta_key', models.TextField(blank=True, null=True)),
                ('customer_meta_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customer_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerNotification',
            fields=[
                ('notify_id', models.AutoField(primary_key=True, serialize=False)),
                ('send_form_id', models.IntegerField()),
                ('send_to_id', models.IntegerField()),
                ('notification_text', models.TextField(blank=True, null=True)),
                ('its_view', models.CharField(max_length=1)),
                ('its_click', models.CharField(max_length=1)),
                ('notifiedtime', models.DateTimeField()),
            ],
            options={
                'db_table': 'customer_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerOrderTableProduct',
            fields=[
                ('order_product_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('batch', models.TextField(blank=True, null=True)),
                ('rate', models.FloatField()),
                ('disc', models.FloatField()),
                ('tax', models.FloatField()),
                ('mrp', models.FloatField()),
                ('rate_mode', models.TextField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('free', models.IntegerField()),
                ('scheme_name', models.TextField(blank=True, null=True)),
                ('customer_id', models.IntegerField()),
                ('customer_type', models.TextField()),
                ('seller_user_id', models.IntegerField()),
                ('seller_user_role', models.TextField()),
                ('status', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'customer_order_table_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerPlaceorder',
            fields=[
                ('customer_order_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField()),
                ('status', models.CharField(max_length=2)),
                ('is_invoiced', models.CharField(max_length=1)),
                ('is_placed_order', models.CharField(max_length=1)),
                ('user_id', models.IntegerField()),
                ('user_role', models.TextField()),
                ('order_type', models.CharField(max_length=10)),
                ('payment_method', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customer_placeorder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerReference',
            fields=[
                ('reference_id', models.AutoField(primary_key=True, serialize=False)),
                ('referencename', models.CharField(db_column='ReferenceName', max_length=250)),
            ],
            options={
                'db_table': 'customer_reference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerReferenceName',
            fields=[
                ('reference_id', models.AutoField(primary_key=True, serialize=False)),
                ('reference_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customer_reference_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerRoles',
            fields=[
                ('cust_role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.TextField()),
            ],
            options={
                'db_table': 'customer_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeliveryChallan',
            fields=[
                ('delivery_challan_id', models.AutoField(primary_key=True, serialize=False)),
                ('invoice_no', models.TextField()),
                ('order_id', models.IntegerField()),
                ('invoice_amount', models.FloatField()),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'delivery_challan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Designations',
            fields=[
                ('desig_id', models.AutoField(primary_key=True, serialize=False)),
                ('desig_name', models.TextField()),
                ('parent_desig_id', models.IntegerField()),
            ],
            options={
                'db_table': 'designations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DistributorType',
            fields=[
                ('distributor_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('distributor_type', models.TextField()),
            ],
            options={
                'db_table': 'distributor_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('district_id', models.AutoField(primary_key=True, serialize=False)),
                ('district_name', models.TextField()),
                ('state_id', models.IntegerField()),
            ],
            options={
                'db_table': 'district',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Divisions',
            fields=[
                ('division_id', models.AutoField(primary_key=True, serialize=False)),
                ('division_name', models.TextField()),
            ],
            options={
                'db_table': 'divisions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EndCustomer',
            fields=[
                ('end_customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_by_user_id', models.IntegerField()),
                ('created_by_user_role', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('name', models.TextField(blank=True, null=True)),
                ('mobile', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('farm_name', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('taluka', models.TextField(blank=True, null=True)),
                ('district', models.TextField(blank=True, db_column='District', null=True)),
                ('state', models.TextField(blank=True, db_column='State', null=True)),
                ('pin_code', models.TextField(blank=True, db_column='Pin_code', null=True)),
                ('gst_no', models.TextField(blank=True, null=True)),
                ('hq', models.IntegerField()),
                ('division', models.IntegerField()),
                ('status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'end_customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodReciept',
            fields=[
                ('good_reciept_id', models.AutoField(primary_key=True, serialize=False)),
                ('gr_no', models.IntegerField()),
                ('challan_no', models.IntegerField()),
                ('supplier', models.IntegerField()),
                ('challan_date', models.DateField()),
                ('created_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'good_reciept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsReturnDetails',
            fields=[
                ('return_id', models.AutoField(primary_key=True, serialize=False)),
                ('goods_return_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('sku', models.TextField(blank=True, null=True)),
                ('batch', models.TextField()),
                ('manufacturing_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('mrp', models.FloatField()),
                ('customer_id', models.IntegerField()),
                ('type', models.TextField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('scheme_name', models.TextField(blank=True, null=True)),
                ('rate', models.FloatField()),
                ('netrate', models.FloatField(db_column='NetRate')),
                ('created_date', models.DateTimeField()),
                ('action', models.CharField(blank=True, db_comment='RU - Reuse\r\nRP - Reprocess\r\nRO - RightOff', max_length=2, null=True)),
                ('reuse', models.IntegerField(blank=True, null=True)),
                ('reprocess', models.IntegerField(blank=True, null=True)),
                ('rightoff', models.IntegerField(blank=True, null=True)),
                ('isapproved', models.CharField(blank=True, db_column='isApproved', max_length=1, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goods_return_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Headquarters',
            fields=[
                ('hq_id', models.AutoField(primary_key=True, serialize=False)),
                ('hq_name', models.TextField()),
                ('base_town', models.TextField(blank=True, null=True)),
                ('base_town_id', models.IntegerField()),
                ('geo_location', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'headquarters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instock',
            fields=[
                ('instock_id', models.AutoField(primary_key=True, serialize=False)),
                ('good_reciept_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=14, null=True)),
                ('quantity', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=11, null=True)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('batch', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=11, null=True)),
                ('manfacturing_date', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=19, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('mrp', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=19, null=True)),
                ('purchase_rate', models.IntegerField(blank=True, null=True)),
                ('pts', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('ptr', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('ptc', models.IntegerField(blank=True, null=True)),
                ('ptv', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('ptk', models.IntegerField(blank=True, null=True)),
                ('margin', models.IntegerField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'instock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instock1',
            fields=[
                ('instock_id', models.AutoField(primary_key=True, serialize=False)),
                ('good_reciept_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('sku', models.TextField()),
                ('quantity', models.IntegerField()),
                ('batch_id', models.IntegerField()),
                ('batch', models.TextField()),
                ('manfacturing_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('mrp', models.FloatField()),
                ('purchase_rate', models.FloatField()),
                ('pts', models.FloatField()),
                ('ptr', models.FloatField()),
                ('ptc', models.FloatField()),
                ('ptv', models.FloatField()),
                ('ptk', models.FloatField()),
                ('margin', models.FloatField()),
                ('created_by', models.IntegerField()),
                ('created_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'instock1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('invoice_id', models.AutoField(primary_key=True, serialize=False)),
                ('invoice_no', models.TextField()),
                ('order_id', models.IntegerField()),
                ('invoice_amount', models.IntegerField()),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceDetails',
            fields=[
                ('invoice_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('invoice_id', models.IntegerField()),
                ('customer_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('batch', models.TextField()),
                ('igst', models.IntegerField()),
                ('sgst', models.IntegerField()),
                ('cgst', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('rate', models.IntegerField()),
                ('disc', models.IntegerField()),
                ('taxble_amount', models.IntegerField()),
            ],
            options={
                'db_table': 'invoice_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LrDetails',
            fields=[
                ('lr_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('lrno', models.TextField(blank=True, null=True)),
                ('order_id', models.IntegerField()),
                ('file', models.TextField(blank=True, null=True)),
                ('is_verified', models.CharField(max_length=1)),
                ('dispatch_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'lr_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MobileSingleDeviceStatus',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('user_email', models.CharField(max_length=100)),
                ('user_type', models.CharField(max_length=50)),
                ('device_id', models.CharField(max_length=50)),
                ('modal_name', models.CharField(max_length=70)),
                ('login_status', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'mobile_single_device_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MonthlyComissionPayable',
            fields=[
                ('comission_payable_id', models.AutoField(primary_key=True, serialize=False)),
                ('comission_meta_id', models.IntegerField()),
                ('vetzone_id', models.IntegerField()),
                ('commission_amt', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=11, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'monthly_comission_payable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notify_id', models.AutoField(primary_key=True, serialize=False)),
                ('send_form_id', models.IntegerField()),
                ('send_to_id', models.IntegerField()),
                ('notification_text', models.TextField(blank=True, null=True)),
                ('its_view', models.CharField(max_length=1)),
                ('its_click', models.CharField(max_length=1)),
                ('notifiedtime', models.DateTimeField()),
            ],
            options={
                'db_table': 'notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderApproval',
            fields=[
                ('order_approval_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField()),
                ('order_id', models.IntegerField()),
                ('from_admin_id', models.IntegerField()),
                ('from_role_id', models.IntegerField()),
                ('to_admin_id', models.IntegerField()),
                ('to_role_id', models.IntegerField()),
                ('action', models.CharField(max_length=25)),
                ('on_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'order_approval',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderingHierarchy',
            fields=[
                ('ordering_hierarchy_id', models.AutoField(primary_key=True, serialize=False)),
                ('from_customer_id', models.IntegerField()),
                ('from_admin_id', models.IntegerField()),
                ('from_role_id', models.IntegerField()),
                ('action', models.TextField()),
                ('to_admin_id', models.IntegerField()),
                ('to_role_id', models.IntegerField()),
                ('payment_method', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ordering_hierarchy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderTableProduct',
            fields=[
                ('order_product_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('batch', models.TextField(blank=True, null=True)),
                ('rate', models.FloatField()),
                ('disc', models.FloatField()),
                ('tax', models.FloatField()),
                ('mrp', models.FloatField()),
                ('rate_mode', models.TextField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('free', models.IntegerField()),
                ('scheme_name', models.TextField(blank=True, null=True)),
                ('user_id', models.IntegerField()),
                ('user_role', models.TextField()),
                ('status', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'order_table_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentDetails',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField()),
                ('amount', models.TextField()),
                ('transcation_id', models.TextField()),
                ('reciept', models.TextField()),
                ('payment_date', models.DateTimeField()),
                ('payment_mode', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Placeorder',
            fields=[
                ('stockiest_order_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField()),
                ('status', models.CharField(db_comment='P - Pending\r\nI - Inprocess\r\nY - Dispatched\r\nD - Delivered\r\nN - Cancelled\r\nA - Advanced\r\nPI - PI Generated\r\nPA - payment Acceptance\r\nF - For Approval at Finance', max_length=2)),
                ('is_invoiced', models.CharField(max_length=1)),
                ('is_placed_order', models.CharField(max_length=1)),
                ('user_id', models.IntegerField()),
                ('user_role', models.TextField()),
                ('order_type', models.CharField(max_length=10)),
                ('payment_method', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'placeorder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PricingStructure',
            fields=[
                ('pricing_id', models.AutoField(primary_key=True, serialize=False)),
                ('division_id', models.IntegerField()),
                ('customer_type', models.IntegerField()),
                ('file', models.TextField()),
                ('created_on', models.DateTimeField()),
                ('created_by', models.IntegerField()),
            ],
            options={
                'db_table': 'pricing_structure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcessTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_id', models.IntegerField()),
                ('customer_id', models.IntegerField()),
                ('from_desig_id', models.IntegerField()),
                ('from_admin_id', models.IntegerField()),
                ('to_desig_id', models.IntegerField()),
                ('to_admin_id', models.IntegerField()),
                ('action', models.TextField()),
                ('remark', models.TextField()),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'process_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=27, null=True)),
                ('sku', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=13, null=True)),
                ('product_code', models.IntegerField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=4, null=True)),
                ('product_division', models.IntegerField(blank=True, null=True)),
                ('sub_division', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=7, null=True)),
                ('category_id', models.IntegerField(blank=True, null=True)),
                ('manufacturer', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=26, null=True)),
                ('barcode', models.IntegerField(blank=True, null=True)),
                ('shipper_size', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=17, null=True)),
                ('batch_size', models.CharField(max_length=20)),
                ('hsn_code', models.IntegerField(blank=True, null=True)),
                ('ic_code', models.IntegerField(blank=True, null=True)),
                ('inventory_days', models.IntegerField(blank=True, null=True)),
                ('sheme_lot_one_invoice_qnty', models.IntegerField(blank=True, null=True)),
                ('sheme_lot_one_free_qnty', models.IntegerField(blank=True, null=True)),
                ('sheme_lot_two_invoice_qnty', models.IntegerField(blank=True, null=True)),
                ('sheme_lot_two_free_qnty', models.IntegerField(blank=True, null=True)),
                ('min_inventory_qnty', models.IntegerField(blank=True, null=True)),
                ('commission', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product1',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.TextField()),
                ('sku', models.TextField()),
                ('product_code', models.TextField()),
                ('unit', models.TextField()),
                ('product_division', models.IntegerField()),
                ('sub_division', models.TextField(blank=True, null=True)),
                ('category_id', models.IntegerField()),
                ('manufacturer', models.TextField(blank=True, null=True)),
                ('barcode', models.TextField(blank=True, null=True)),
                ('shipper_size', models.TextField(blank=True, null=True)),
                ('hsn_code', models.TextField(blank=True, null=True)),
                ('ic_code', models.TextField(blank=True, null=True)),
                ('inventory_days', models.TextField(blank=True, null=True)),
                ('sheme_lot_one_invoice_qnty', models.IntegerField()),
                ('sheme_lot_one_free_qnty', models.IntegerField()),
                ('sheme_lot_two_invoice_qnty', models.IntegerField()),
                ('sheme_lot_two_free_qnty', models.IntegerField()),
                ('min_inventory_qnty', models.IntegerField()),
                ('commission', models.IntegerField()),
            ],
            options={
                'db_table': 'product1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCatalogue',
            fields=[
                ('product_catalogue_id', models.AutoField(primary_key=True, serialize=False)),
                ('division_id', models.IntegerField()),
                ('file', models.TextField()),
                ('created_on', models.DateTimeField()),
                ('created_by', models.IntegerField()),
            ],
            options={
                'db_table': 'product_catalogue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.TextField()),
            ],
            options={
                'db_table': 'product_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.TextField()),
            ],
            options={
                'db_table': 'product_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductGst',
            fields=[
                ('gst_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('gst', models.FloatField()),
                ('igst', models.FloatField()),
                ('cgst', models.FloatField()),
                ('sgst', models.FloatField()),
            ],
            options={
                'db_table': 'product_gst',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProformaInvoice',
            fields=[
                ('pi_no', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField()),
                ('netamount', models.IntegerField()),
                ('discount', models.FloatField()),
                ('gross', models.FloatField()),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'proforma_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reprocess',
            fields=[
                ('reprocess_id', models.AutoField(primary_key=True, serialize=False)),
                ('good_reciept_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=14, null=True)),
                ('quantity', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=11, null=True)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('batch', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=11, null=True)),
                ('manfacturing_date', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=19, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('mrp', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=19, null=True)),
                ('purchase_rate', models.IntegerField(blank=True, null=True)),
                ('pts', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('ptr', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('ptc', models.IntegerField(blank=True, null=True)),
                ('ptv', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('ptk', models.IntegerField(blank=True, null=True)),
                ('margin', models.IntegerField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'reprocess',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestFinance',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('vetzone_id', models.IntegerField()),
                ('comment', models.CharField(max_length=100)),
                ('total_due', models.IntegerField()),
                ('status', models.CharField(db_comment='P:pending , A:approve', max_length=1)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'request_finance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Requisition',
            fields=[
                ('requisition_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField()),
                ('created_by', models.IntegerField()),
                ('status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'requisition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequisitionDetails',
            fields=[
                ('requisition_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('requisition_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('batch_size', models.IntegerField()),
                ('stock_quantity', models.IntegerField()),
                ('required_quantity', models.IntegerField()),
                ('expected_date', models.DateField()),
                ('status', models.CharField(max_length=1)),
                ('three_month_avg', models.IntegerField()),
                ('available_quantity', models.IntegerField()),
            ],
            options={
                'db_table': 'requisition_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReturnGoods',
            fields=[
                ('return_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_returned', models.CharField(blank=True, max_length=1, null=True)),
                ('created_by', models.IntegerField()),
                ('type', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField()),
                ('returned_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(db_comment='P - Pending\r\nI - Inprocess\r\nC - Completed', max_length=1)),
            ],
            options={
                'db_table': 'return_goods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReturnLrDetails',
            fields=[
                ('lr_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('lrno', models.TextField()),
                ('return_id', models.IntegerField()),
                ('file', models.TextField()),
                ('is_verified', models.CharField(max_length=1)),
                ('dispatch_date', models.DateTimeField()),
                ('lr_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'return_lr_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rightoff',
            fields=[
                ('rightoff_id', models.AutoField(primary_key=True, serialize=False)),
                ('good_reciept_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=14, null=True)),
                ('quantity', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=11, null=True)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('batch', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=11, null=True)),
                ('manfacturing_date', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=19, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('mrp', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=19, null=True)),
                ('purchase_rate', models.IntegerField(blank=True, null=True)),
                ('pts', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('ptr', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('ptc', models.IntegerField(blank=True, null=True)),
                ('ptv', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('ptk', models.IntegerField(blank=True, null=True)),
                ('margin', models.IntegerField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'rightoff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesPlan',
            fields=[
                ('sale_plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('plan_amount', models.IntegerField()),
                ('created_by', models.IntegerField()),
                ('created_by_role', models.IntegerField()),
                ('created_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'sales_plan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesPlanMeta',
            fields=[
                ('sales_meta_id', models.AutoField(primary_key=True, serialize=False)),
                ('sales_plan_id', models.IntegerField()),
                ('customer_id', models.IntegerField()),
                ('customer_role', models.TextField()),
                ('plan_value', models.IntegerField()),
                ('status', models.CharField(db_comment='P:Comments\r\nY:Accepted\r\nN:Rejected', max_length=1)),
            ],
            options={
                'db_table': 'sales_plan_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesPlanProductMeta',
            fields=[
                ('sales_plan_product_id', models.AutoField(primary_key=True, serialize=False)),
                ('sales_meta_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('product_quantity', models.IntegerField()),
                ('product_value', models.IntegerField()),
            ],
            options={
                'db_table': 'sales_plan_product_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('state_id', models.AutoField(primary_key=True, serialize=False)),
                ('state_name', models.TextField()),
                ('state_code', models.IntegerField()),
            ],
            options={
                'db_table': 'state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('supplier_id', models.AutoField(primary_key=True, serialize=False)),
                ('sup_name', models.TextField()),
                ('sup_email', models.TextField()),
                ('address', models.TextField()),
                ('state_id', models.IntegerField()),
                ('city', models.TextField(blank=True, null=True)),
                ('pincode', models.IntegerField()),
                ('category', models.IntegerField()),
                ('phone', models.TextField(blank=True, null=True)),
                ('gst', models.TextField(blank=True, null=True)),
                ('pan', models.TextField(blank=True, null=True)),
                ('contact_person', models.TextField(blank=True, null=True)),
                ('contact_person_number', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'suppliers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TargetMeta',
            fields=[
                ('target_meta_id', models.AutoField(primary_key=True, serialize=False)),
                ('target_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('sku', models.TextField()),
                ('pts', models.TextField()),
                ('ypm', models.TextField()),
                ('quantity', models.FloatField()),
                ('value', models.FloatField()),
                ('month', models.TextField()),
                ('year', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'target_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TargetTable',
            fields=[
                ('target_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('hq_id', models.IntegerField()),
                ('desig_id', models.IntegerField()),
                ('file', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField()),
                ('status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'target_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TermsConditions',
            fields=[
                ('terms_id', models.AutoField(primary_key=True, serialize=False)),
                ('cust_type', models.CharField(blank=True, max_length=11, null=True)),
                ('file', models.TextField(blank=True, null=True)),
                ('created_by', models.IntegerField()),
                ('created_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'terms_conditions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vetzone',
            fields=[
                ('vetzone_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('owner_name', models.TextField()),
                ('email', models.TextField()),
                ('mobile_number', models.TextField()),
                ('password', models.TextField()),
                ('type', models.IntegerField()),
                ('role', models.IntegerField()),
                ('kyc_status', models.CharField(max_length=1)),
                ('approval_status', models.CharField(db_comment='C - Closed VetZone', max_length=1)),
                ('is_registered', models.CharField(max_length=1)),
                ('created_on', models.DateTimeField()),
                ('placeorder', models.CharField(max_length=1)),
                ('state_id', models.IntegerField()),
                ('geo_location', models.CharField(blank=True, max_length=100, null=True)),
                ('establishment_status', models.CharField(max_length=1)),
                ('remark', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vetzone',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VetzoneBroucher',
            fields=[
                ('vetzone_broucher_id', models.AutoField(primary_key=True, serialize=False)),
                ('division_id', models.IntegerField()),
                ('file', models.TextField(blank=True, null=True)),
                ('created_by', models.IntegerField()),
                ('created_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'vetzone_broucher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VetzoneCloseRequest',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('refund_amt', models.TextField()),
                ('document', models.TextField()),
                ('vetzone_id', models.IntegerField()),
                ('created_by', models.IntegerField()),
                ('created_on', models.DateTimeField()),
                ('status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'vetzone_close_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VetzoneCreditNoteTable',
            fields=[
                ('credit_note_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.TextField()),
                ('invoice_date', models.DateTimeField()),
                ('order_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('user_role', models.TextField()),
                ('order_date', models.DateTimeField()),
                ('credit_end_date', models.DateField()),
                ('payment_status', models.CharField(db_comment='Y-Completed\r\nN - Pending\r\nP - pending for approval\r\nD - declined', max_length=1)),
                ('payment_date', models.DateField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vetzone_credit_note_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VetzoneEndCustomer',
            fields=[
                ('end_customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_by_user_id', models.IntegerField()),
                ('created_by_user_role', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('name', models.TextField()),
                ('mobile', models.TextField()),
                ('email', models.TextField()),
                ('farm_name', models.TextField(blank=True, null=True)),
                ('address', models.TextField()),
                ('taluka', models.TextField()),
                ('district', models.TextField(db_column='District')),
                ('state', models.TextField(db_column='State')),
                ('pin_code', models.TextField(blank=True, db_column='Pin_code', null=True)),
                ('gst_no', models.TextField(blank=True, null=True)),
                ('hq', models.IntegerField()),
                ('division', models.IntegerField()),
                ('status', models.CharField(max_length=1)),
                ('farmer_type', models.TextField()),
                ('dairy_animals', models.IntegerField()),
                ('sheep_goat', models.IntegerField()),
                ('piggery_animals', models.IntegerField()),
                ('layer_birds', models.IntegerField()),
                ('broiler_birds', models.IntegerField()),
                ('reference', models.IntegerField()),
            ],
            options={
                'db_table': 'vetzone_end_customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VetzoneGoods',
            fields=[
                ('vetzone_goods_id', models.AutoField(primary_key=True, serialize=False)),
                ('vetzone_id', models.IntegerField()),
                ('sim_number', models.IntegerField()),
                ('opening_goods', models.TextField(blank=True, null=True)),
                ('machine', models.TextField(blank=True, null=True)),
                ('furniture', models.TextField(blank=True, null=True)),
                ('machine_file', models.TextField(blank=True, null=True)),
                ('furniture_file', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vetzone_goods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VetzoneHqDiv',
            fields=[
                ('vetzone_hq_div_id', models.AutoField(primary_key=True, serialize=False)),
                ('vetzone_id', models.IntegerField()),
                ('hq_id', models.IntegerField()),
                ('div_id', models.IntegerField()),
                ('approval_admin_id', models.IntegerField()),
                ('sub_division', models.TextField()),
            ],
            options={
                'db_table': 'vetzone_hq_div',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VetzoneInstock',
            fields=[
                ('instock_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('sku', models.TextField()),
                ('quantity', models.IntegerField()),
                ('batch', models.TextField()),
                ('manfacturing_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('mrp', models.FloatField()),
                ('purchase_rate', models.FloatField()),
                ('pts', models.FloatField()),
                ('ptr', models.FloatField()),
                ('ptc', models.FloatField()),
                ('ptv', models.FloatField()),
                ('ptk', models.FloatField()),
                ('margin', models.FloatField()),
                ('created_by', models.IntegerField()),
                ('created_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'vetzone_instock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VetzoneKycDocument',
            fields=[
                ('vetzone_kyc_id', models.AutoField(primary_key=True, serialize=False)),
                ('vetzone_id', models.IntegerField()),
                ('document', models.TextField(blank=True, null=True)),
                ('approval_status', models.CharField(max_length=1)),
                ('uploaded_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'vetzone_kyc_document',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VetzoneMeta',
            fields=[
                ('vetzone_meta_id', models.AutoField(primary_key=True, serialize=False)),
                ('vetzone_id', models.IntegerField()),
                ('vetzone_meta_key', models.TextField()),
                ('vetzone_meta_value', models.TextField()),
            ],
            options={
                'db_table': 'vetzone_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VetzonePaymentDetails',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('vetzone_id', models.IntegerField()),
                ('amount', models.TextField()),
                ('transcation_id', models.TextField()),
                ('reciept', models.TextField()),
                ('payment_date', models.DateTimeField()),
                ('payment_mode', models.TextField()),
            ],
            options={
                'db_table': 'vetzone_payment_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VetzoneType',
            fields=[
                ('v_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('v_type_name', models.TextField()),
            ],
            options={
                'db_table': 'vetzone_type',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='admin',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='adminhqdiv',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='adminmeta',
            options={'managed': False},
        ),
    ]
